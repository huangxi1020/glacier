package main

import (
	"fmt"

	"github.com/mylxsw/asteria/log"
	"github.com/mylxsw/glacier/infra"
	"github.com/mylxsw/glacier/starter/application"
	{{- if eq .WithHttpServer "Y" }}
    "{{ .Package }}/api"
    {{- end }}
    "{{ .Package }}/config"
)

var (
	Version   = "1.0"
	GitCommit = ""
)

func main() {
	app := application.Create(fmt.Sprintf("%s(%s)", Version, GitCommit)).WithName("{{ .ProjectName }}")
	{{- if ne .AuthorName "" }}
	app.WithAuthor("{{ .AuthorName }}", "{{ .AuthorEmail }}")
    {{- end }}

	{{- if eq .WithHttpServer "Y" }}
	app.AddStringFlag("listen", ":8080", "http listen addr")
	{{- if eq .WithSessionSupport "Y" }}
    app.AddStringFlag("session-key", "49a95f4cdaac9dedbc3298c5f5a7aa83", "Session key")
    {{- end }}
    {{- end }}


	app.Singleton(func(c infra.FlagContext) *config.Config {
		return &config.Config{
			{{- if eq .WithHttpServer "Y" }}
			Listen: c.String("listen"),
			{{ if eq .WithSessionSupport "Y" }}SessionKey: c.String("session-key"),{{ end }}
			{{- end }}
		}
	})

	{{- if eq .WithHttpServer "Y" }}
	app.Provider(api.Provider{})
	{{- end }}

	app.Main(func(conf *config.Config) {
        if log.DebugEnabled() {
            log.With(conf).Debug("configuration loaded")
        }
	})

    application.MustRun(app)
}
